{
  "TestCaseRuns": [
    {
      "TestStepRuns": [
        {
          "Id": "TS_001",
          "Description": "Open the Browser",
          "Success": true,
          "Model": {
            "Id": "TS_001",
            "Description": "Open the Browser",
            "ActionKeyword": "openBrowser"
          }
        },
        {
          "Id": "TS_002",
          "Description": "Navigate to URL",
          "Success": true,
          "Model": {
            "Id": "TS_002",
            "Description": "Navigate to URL",
            "ActionKeyword": "navigate"
          }
        },
        {
          "TemplateRun": {
            "TestStepRuns": [
              {
                "Error": {
                  "ClassName": "OpenQA.Selenium.WebDriverTimeoutException",
                  "Message": "Timed out after 20 seconds",
                  "Data": null,
                  "InnerException": {
                    "ClassName": "OpenQA.Selenium.NoSuchElementException",
                    "Message": "no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//input[@name='buyerEmail']\"}\n  (Session info: chrome=68.0.3440.106)\n  (Driver info: chromedriver=2.40.565498 (ea082db3280dd6843ebfb08a625e3eb905c4f5ab),platform=Windows NT 10.0.17134 x86_64)",
                    "Data": null,
                    "InnerException": null,
                    "HelpURL": null,
                    "StackTraceString": "   at OpenQA.Selenium.Remote.RemoteWebDriver.UnpackAndThrowOnError(Response errorResponse)\r\n   at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)\r\n   at OpenQA.Selenium.Remote.RemoteWebDriver.FindElement(String mechanism, String value)\r\n   at BizAPP.Automation.Common.SeleniumAction.<>c__DisplayClass9_0`1.<GetItem>b__0(IWebDriver _)\r\n   at OpenQA.Selenium.Support.UI.DefaultWait`1.Until[TResult](Func`2 condition)",
                    "RemoteStackTraceString": null,
                    "RemoteStackIndex": 0,
                    "ExceptionMethod": "8\nUnpackAndThrowOnError\nBizAPP.Automation.Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=53cc556ed6501d24\nOpenQA.Selenium.Remote.RemoteWebDriver\nVoid UnpackAndThrowOnError(OpenQA.Selenium.Remote.Response)",
                    "HResult": -2146233088,
                    "Source": "BizAPP.Automation.Common",
                    "WatsonBuckets": null
                  },
                  "HelpURL": null,
                  "StackTraceString": "   at OpenQA.Selenium.Support.UI.DefaultWait`1.ThrowTimeoutException(String exceptionMessage, Exception lastException)\r\n   at OpenQA.Selenium.Support.UI.DefaultWait`1.Until[TResult](Func`2 condition)\r\n   at BizAPP.Automation.Common.SeleniumAction.GetItem[T](ObjectRepositoryItem item)\r\n   at BizAPP.Automation.Common.SeleniumAction.ElementAction(ObjectRepositoryItem item, Func`2 callback)\r\n   at BizAPP.Automation.Framework.Actions.InputAction.Execute(ObjectRepositoryItem item, String data)\r\n   at BizAPP.Automation.Framework.Execution.TestStepRunner.ExecuteStep(TestStep model, TestStepRun run, ITestNode node, TestDataMapping dataMapping, TestData data, String actionKeyword, AutomationService automationService)\r\n   at BizAPP.Automation.Framework.Execution.TestStepRunner.Execute(TestStep model, TestStepRun run, ITestNode node, TestDataMapping dataMapping, TestData data)\r\n   at BizAPP.Automation.Framework.Execution.TestCaseRunner.Execute(TestCase model, TestCaseRun run, ITestNode node, TestDataMapping dataMapping, TestData data)\r\n   at BizAPP.Automation.Framework.Execution.TestStepRunner.ExecuteTemplate(TestStepRun run, ITestNode node, TestDataMapping dataMapping, TestData data, String actionKeyword)\r\n   at BizAPP.Automation.Framework.Execution.TestStepRunner.Execute(TestStep model, TestStepRun run, ITestNode node, TestDataMapping dataMapping, TestData data)\r\n   at BizAPP.Automation.Framework.Execution.TestCaseRunner.Execute(TestCase model, TestCaseRun run, ITestNode node, TestDataMapping dataMapping, TestData data)\r\n   at BizAPP.Automation.Framework.Execution.TestSuiteRunner.RunTestCase(TestCase[] testCases, TestCase tc, TestSuiteRun run, ITestNode node, DataSource dataSource)\r\n   at BizAPP.Automation.Framework.Execution.TestSuiteRunner.Execute(TestSuite model, TestSuiteRun run, ITestNode node, TestDataMapping dataMapping, TestData data)",
                  "RemoteStackTraceString": null,
                  "RemoteStackIndex": 0,
                  "ExceptionMethod": "8\nThrowTimeoutException\nBizAPP.Automation.Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=53cc556ed6501d24\nOpenQA.Selenium.Support.UI.DefaultWait`1\nVoid ThrowTimeoutException(System.String, System.Exception)",
                  "HResult": -2146233088,
                  "Source": "BizAPP.Automation.Common",
                  "WatsonBuckets": null
                },
                "ScreenSnapshot": "",
                "Id": "TS_001",
                "Description": "Enter Email",
                "Model": {
                  "Id": "TS_001",
                  "Description": "Enter Email",
                  "PageObject": "Cart_Email_txtbox",
                  "ActionKeyword": "input"
                }
              }
            ],
            "AllResults": {},
            "Id": "CreateAccount",
            "Description": "Running template CreateAccount",
            "Model": {
              "Id": "CreateAccount",
              "TemplateId": "CreateAccount",
              "Description": "Running template CreateAccount",
              "IsTemplate": true
            }
          },
          "Id": "TS_003",
          "Description": "Enter Email",
          "Model": {
            "Id": "TS_003",
            "Description": "Enter Email",
            "PageObject": " ",
            "ActionKeyword": "CreateAccount"
          }
        }
      ],
      "AllResults": {
        "Cart_Email_txtbox": "mallory@nader.com"
      },
      "Id": "VC_TestCaseID_1",
      "Description": "Purchasing a product with US contry as an Adult",
      "Model": {
        "Id": "VC_TestCaseID_1",
        "TemplateId": "PurchaseProductSuccessUSadult",
        "Description": "Purchasing a product with US contry as an Adult",
        "TestModuleId": "ViomeCart",
        "RunMode": true
      }
    },
    {
      "TestStepRuns": [],
      "AllResults": {},
      "Id": "VC_TestCaseID_2",
      "Description": "VerifyingLoginWithExistingUser",
      "Model": {
        "Id": "VC_TestCaseID_2",
        "TemplateId": "VerifyingLoginWithExistingUser",
        "Description": "VerifyingLoginWithExistingUser",
        "TestModuleId": "ViomeCart",
        "RunMode": true,
        "DependentOn": "VC_TestCaseID_1"
      }
    }
  ],
  "Browser": "Chrome",
  "AllResults": {
    "VC_TestCaseID_1.Cart_Email_txtbox": "mallory@nader.com"
  },
  "Id": "ViomeCart",
  "Description": "This Module Validates the Activity of Buying the Viome product ",
  "Model": {
    "Id": "ViomeCart",
    "Description": "This Module Validates the Activity of Buying the Viome product ",
    "RunMode": true
  }
}